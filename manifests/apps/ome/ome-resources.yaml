---
# Source: ome-resources/templates/model-agent-daemonset/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ome-model-agent
  namespace: ome-system
  labels:
    app.kubernetes.io/component: "ome-model-agent-daemonset"
---
# Source: ome-resources/templates/ome-controller/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: ome-controller-manager
    app.kubernetes.io/managed-by: ome-controller-manager
    app.kubernetes.io/name: ome-controller-manager
  name: ome-controller-manager
---
# Source: ome-resources/templates/ome-controller/configmap.yaml
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: inferenceservice-config
#   namespace: ome
# data:
#   multinodeProber: |-
#     {
#         "image" : "ghcr.io/moirai-internal/multinode-prober:v0.1",
#         "memoryRequest": "100Mi",
#         "memoryLimit": "100Mi",
#         "cpuRequest": "100m",
#         "cpuLimit": "100m",
#         "startupFailureThreshold": 150,
#         "startupPeriodSeconds": 30,
#         "startupTimeoutSeconds": 60,
#         "startupInitialDelaySeconds": 120,
#         "unavailableThresholdSeconds": 600
#     }
#   ingress: |-
#     {
#         "ingressGateway" : "knative-serving/knative-ingress-gateway",
#         "ingressService" : "istio-ingressgateway.istio-system.svc.cluster.local",
#         "localGateway" : "knative-serving/knative-local-gateway",
#         "localGatewayService" : "knative-local-gateway.istio-system.svc.cluster.local",
#         "knativeLocalGatewayService" : "knative-local-gateway.istio-system.svc.cluster.local",
#         "omeIngressGateway" : "",
#         "ingressDomain"  : "svc.cluster.local",
#         "ingressClassName" : "istio",
#         "additionalIngressDomains" : null,
#         "domainTemplate": "{{ .Name }}.{{ .Namespace }}.{{ .IngressDomain }}",
#         "urlScheme": "http",
#         "disableIstioVirtualHost": false,
#         "pathTemplate": "",
#         "disableIngressCreation": false,
#         "enableGatewayAPI": false
#     }
#   deploy: |-
#     {
#       "defaultDeploymentMode": "RawDeployment"
#     }

#   metricsAggregator: |-
#     {
#       "enableMetricAggregation": "false",
#       "enablePrometheusScraping" : "false"
#     }
#   modelInit: |-
#     {
#         "image" : "ghcr.io/moirai-internal/ome-agent:v0.1.2",
#         "memoryRequest": "150Gi",
#         "memoryLimit": "180Gi",
#         "cpuRequest": "15",
#         "cpuLimit": "15",
#         "compartmentId": "ocid1.compartment.oc1..dummy-compartment",
#         "authType" : "InstancePrincipal",
#         "vaultId": "ocid1.vault.oc1.ap-osaka-1.dummy.dummy-vault",
#         "region": "ap-osaka-1"
#     }
#   servingSidecar: |-
#     {
#         "image" : "ghcr.io/moirai-internal/ome-agent:v0.1.2",
#         "memoryRequest": "2Gi",
#         "memoryLimit": "4Gi",
#         "cpuRequest": "1",
#         "cpuLimit": "2",
#         "compartmentId": "ocid1.compartment.oc1..dummy-compartment",
#         "authType" : "InstancePrincipal",
#         "region": "ap-osaka-1"
#     }
#   kedaConfig: |-
#     {
#       "enableKeda" : true,
#       "promServerAddress": "http://prometheus-operated.monitoring.svc.cluster.local:9090",
#       "customPromQuery": "",
#       "scalingThreshold": "10",
#       "scalingOperator": "GreaterThanOrEqual"
#     }
---
# Source: ome-resources/templates/ome-controller/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: benchmarkjob-config
  namespace: ome
data:
  benchmarkjob: |
    {
      "podConfig": {
        "image": "ghcr.io/moirai-internal/genai-bench:0.1.113",
        "cpuRequest": "2",
        "memoryRequest": "2Gi",
        "cpuLimit": "2",
        "memoryLimit": "2Gi"
      }
    }
---
# Source: ome-resources/templates/model-agent-daemonset/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ome-model-agent
  labels:
    app.kubernetes.io/component: "ome-model-agent-daemonset"
rules:
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "watch", "list", "get", "patch", "update" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get", "list", "watch", "patch", "update", "create", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "secrets" ]
    verbs: [ "get" ]
  - apiGroups: [ "ome.io" ]
    resources: [ "basemodels" ]
    verbs: [ "get", "list", "watch", "patch", "update" ]
  - apiGroups: [ "ome.io" ]
    resources: [ "clusterbasemodels" ]
    verbs: [ "get", "list", "watch", "patch", "update" ]
---
# Source: ome-resources/templates/ome-controller/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ome-proxy-role
rules:
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources:
  - subjectaccessreviews
  verbs: ["create"]
---
# Source: ome-resources/templates/ome-controller/rbac/metrics_auth_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ome-metrics-auth-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: ome-resources/templates/ome-controller/rbac/metrics_reader_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ome-metrics-reader
rules:
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: ome-resources/templates/ome-controller/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ome-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - persistentvolumeclaims
  - persistentvolumes
  - pods
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - patch
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs/finalizers
  - jobs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - keda.sh
  resources:
  - scaledobjects/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - leaderworkerset.x-k8s.io
  resources:
  - leaderworkersets
  - leaderworkersets/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - leaderworkerset.x-k8s.io
  resources:
  - leaderworkersets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - sidecars
  - virtualservices
  - virtualservices/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ome.io
  resources:
  - basemodels
  - basemodels/finalizers
  - benchmarkjobs
  - clusterbasemodels
  - clusterservingruntimes
  - clusterservingruntimes/finalizers
  - finetunedweights
  - finetunedweights/finalizers
  - inferenceservices
  - inferenceservices/finalizers
  - servingruntimes
  - servingruntimes/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ome.io
  resources:
  - basemodels/status
  - benchmarkjobs/finalizers
  - benchmarkjobs/status
  - clusterbasemodels/status
  - clusterservingruntimes/status
  - finetunedweights/status
  - inferenceservices/status
  - servingruntimes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ome.io
  resources:
  - clusterbasemodels/finalizers
  verbs:
  - update
- apiGroups:
  - ray.io
  resources:
  - rayclusters
  - rayclusters/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ray.io
  resources:
  - rayclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - serving.knative.dev
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
---
# Source: ome-resources/templates/model-agent-daemonset/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ome-model-agent
  labels:
    app.kubernetes.io/component: "ome-model-agent-daemonset"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ome-model-agent
subjects:
- kind: ServiceAccount
  name: ome-model-agent
  namespace: ome-system
---
# Source: ome-resources/templates/ome-controller/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ome-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ome-proxy-role
subjects:
- kind: ServiceAccount
  name: ome-controller-manager
  namespace: ome-system
---
# Source: ome-resources/templates/ome-controller/rbac/metrics_auth_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ome-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ome-metrics-auth-role
subjects:
  - kind: ServiceAccount
    name: ome-controller-manager
    namespace: ome-system
---
# Source: ome-resources/templates/ome-controller/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ome-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ome-manager-role
subjects:
- kind: ServiceAccount
  name: ome-controller-manager
  namespace: ome-system
---
# Source: ome-resources/templates/ome-controller/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ome-leader-election-role
rules:
- apiGroups:
    - coordination.k8s.io
  resources:
    - leases
  verbs:
    - create
    - get
    - list
    - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
# Source: ome-resources/templates/ome-controller/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ome-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ome-leader-election-role
subjects:
- kind: ServiceAccount
  name: ome-controller-manager
  namespace: ome-system
---
# Source: ome-resources/templates/ome-controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ome-webhook-server-service
  namespace: ome-system
spec:
  ports:
    - port: 443
      targetPort: webhook-server
  selector:
    control-plane: ome-controller-manager
---
# Source: ome-resources/templates/ome-controller/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ome-controller-manager-service
  namespace: ome-system
  labels:
    control-plane: ome-controller-manager
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    control-plane: ome-controller-manager
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 8443
    targetPort: https
    protocol: TCP
---
# Source: ome-resources/templates/model-agent-daemonset/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ome-model-agent-daemonset
  namespace: ome-system
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels: 
      app.kubernetes.io/component: "ome-model-agent-daemonset"
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "ome-model-agent-daemonset"
        logging-forward: enabled
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: ome-model-agent
      affinity:
        null
      nodeSelector:
        {}
      volumes:
        - name: host-models
          hostPath:
            path: /mnt/data/models
            type: DirectoryOrCreate
      containers:
      - name: model-agent
        image: "ghcr.io/moirai-internal/model-agent:v0.1.2"
        imagePullPolicy: Always
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        args:
        - --models-root-dir
        - /mnt/data/models
        - --num-download-worker
        - '2'
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: host-models
          readOnly: false
          mountPath: /mnt/data/models
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 60
        resources:
          limits:
            cpu: "10"
            memory: 100Gi
          requests:
            cpu: "10"
            memory: 100Gi   
      tolerations:
        - key: nvidia.com/gpu
          operator: Exists  
          effect: NoSchedule
---
# Source: ome-resources/templates/ome-controller/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ome-controller-manager
  namespace: ome-system
  labels:
    control-plane: ome-controller-manager
    controller-tools.k8s.io: "1.0"
  annotations:
    prometheus.io/scrape: 'true'
spec:
  replicas: 3
  selector:
    matchLabels:
      control-plane: ome-controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        control-plane: ome-controller-manager
        controller-tools.k8s.io: "1.0"
        logging-forward: enabled
      annotations:
        kubectl.kubernetes.io/default-container: manager
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
    spec:
      serviceAccountName: ome-controller-manager
      containers:
      - command:
        - /manager
        image: "ghcr.io/moirai-internal/ome-manager:v0.1.2"
        imagePullPolicy: IfNotPresent
        name: manager
        args:
        - "--metrics-bind-address=:8080"
        - "--leader-elect"
        - "--webhook"
        - "--zap-encoder=console"
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SECRET_NAME
            value: ome-webhook-server-cert
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 10
          httpGet:
            path: /healthz
            port: 8081
          timeoutSeconds: 5
        readinessProbe:
          initialDelaySeconds: 10
          failureThreshold: 10
          periodSeconds: 5
          httpGet:
            path: /readyz
            port: 8081
          timeoutSeconds: 5
        resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: ome-webhook-server-cert
---
# Source: ome-resources/templates/ome-controller/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: serving-cert
  namespace: ome-system
spec:
  commonName: ome-webhook-server-service.ome-system.svc
  dnsNames:
  - ome-webhook-server-service.ome-system.svc
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: ome-webhook-server-cert
---
# Source: ome-resources/templates/ome-controller/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: ome-system
spec:
  selfSigned: {}
---
# Source: ome-resources/templates/ome-controller/webhooks/isvcmutator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: inferenceservice.ome.io
  annotations:
    cert-manager.io/inject-ca-from: ome/serving-cert
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /mutate-ome-io-v1beta1-inferenceservice
    failurePolicy: Fail
    name: inferenceservice.ome-webhook-server.defaulter
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - ome.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - inferenceservices
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /mutate-pods
    failurePolicy: Fail
    name: inferenceservice.ome-webhook-server.pod-mutator
    sideEffects: None
    reinvocationPolicy: IfNeeded
    admissionReviewVersions: ["v1beta1"]
    namespaceSelector:
      matchExpressions:
        - key: control-plane
          operator: DoesNotExist
    objectSelector:
      matchExpressions:
        - key: ome.io/inferenceservice
          operator: Exists
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
---
# Source: ome-resources/templates/ome-controller/webhooks/benchmarkjobvalidator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: benchmarkjob.ome.io
  annotations:
    cert-manager.io/inject-ca-from: ome/serving-cert
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /validate-ome-io-v1beta1-benchmarkjob
    failurePolicy: Fail
    name: benchmarkjob.ome-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - ome.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - benchmarkjobs
---
# Source: ome-resources/templates/ome-controller/webhooks/isvcvalidator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: inferenceservice.ome.io
  annotations:
    cert-manager.io/inject-ca-from: ome/serving-cert
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /validate-ome-io-v1beta1-inferenceservice
    failurePolicy: Fail
    name: inferenceservice.ome-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - ome.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - inferenceservices
---
# Source: ome-resources/templates/ome-controller/webhooks/runtimevalidator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: clusterservingruntime.ome.io
  annotations:
    cert-manager.io/inject-ca-from: ome/serving-cert
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /validate-ome-io-v1beta1-clusterservingruntime
    failurePolicy: Fail
    name: clusterservingruntime.ome-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - ome.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - clusterservingruntimes
---
# Source: ome-resources/templates/ome-controller/webhooks/runtimevalidator.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: servingruntime.ome.io
  annotations:
    cert-manager.io/inject-ca-from: ome/serving-cert
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: ome-webhook-server-service
        namespace: ome-system
        path: /validate-ome-io-v1beta1-servingruntime
    failurePolicy: Fail
    name: servingruntime.ome-webhook-server.validator
    sideEffects: None
    admissionReviewVersions: ["v1beta1"]
    rules:
      - apiGroups:
          - ome.io
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - servingruntimes
