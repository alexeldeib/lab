apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: modelservices.llm-d.ai
spec:
  group: llm-d.ai
  names:
    kind: ModelService
    listKind: ModelServiceList
    plural: modelservices
    shortNames:
    - msvc
    singular: modelservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.decoupleScaling
      name: Decouple Scaling
      type: boolean
    - jsonPath: .status.prefillReady
      name: Prefill READY
      type: string
    - jsonPath: .status.prefillAvailable
      name: Prefill AVAIL
      type: integer
    - jsonPath: .status.decodeReady
      name: Decode READY
      type: string
    - jsonPath: .status.decodeAvailable
      name: Decode AVAIL
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ModelService is the Schema for the modelservices API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModelServiceSpec defines the desired state of ModelService
            properties:
              baseConfigMapRef:
                description: BaseConfigMapRef provides configuration needed to spawn
                  objects owned by modelservice
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              decode:
                description: Decode is the decode portion of the spec
                properties:
                  acceleratorTypes:
                    description: |-
                      pod
                      AcceleratorTypes determines the set of accelerators on which
                      this pod will be run. Any matching accelerator type can be used
                      to place the model pods.This will override base config when present
                    properties:
                      labelKey:
                        description: |-
                          node label key that identifies the accelerator type for the node
                          e.g., nvidia.com/gpu.product
                        type: string
                      labelValues:
                        description: |-
                          node label values that will be matched against for pod scheduling.
                          e.g., [A100, H100]
                        items:
                          type: string
                        minItems: 1
                        type: array
                    required:
                    - labelKey
                    - labelValues
                    type: object
                  containers:
                    description: Container holds vllm container container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  initContainers:
                    description: InitContainers holds vllm init container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  parallelism:
                    description: |-
                      vllm
                      Parallelism specifies vllm parallelism that will be overridden from base config when present.
                    properties:
                      tensor:
                        default: 1
                        description: |-
                          TensorParallelism corresponds to the same argument in vllm
                          This also corresponds to number of GPUs
                        format: int32
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  replicas:
                    default: 1
                    description: Replicas defines the desired number of replicas for
                      this deployment.
                    format: int32
                    minimum: 0
                    nullable: true
                    type: integer
                type: object
              decoupleScaling:
                description: |-
                  DecoupleScaling determines who owns the replica fields is the deployment objects
                  Set this to true if the intent is to autoscale with HPA, other autoscalers
                  Setting this to false will force the controller to manage deployment replicas based on
                  replica fields in this model service
                type: boolean
              endpointPicker:
                description: EndpointPicker is the endpoint picker (epp) portion of
                  the spec
                properties:
                  containers:
                    description: Container holds vllm container container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  initContainers:
                    description: InitContainers holds vllm init container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  replicas:
                    default: 1
                    description: Replicas defines the desired number of replicas for
                      this deployment.
                    format: int32
                    minimum: 0
                    nullable: true
                    type: integer
                type: object
              modelArtifacts:
                description: |-
                  modelArtifacts provides information needed to download artifacts
                  needed to serve a model
                properties:
                  authSecretName:
                    description: Name of the authentication secret. Contains HF_TOKEN
                    type: string
                  size:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      Size of the model artifacts on disk
                      ensure Size is large enough when providing hf://... URI
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  uri:
                    description: |-
                      URI is the model URI
                      Three types of URIs are support to enable models packaged as images (oci://<image-repo>/<image-name><:image-tag>),
                      models downloaded from HuggingFace (hf://<model-repo>/<model-name>)
                      and pre-existing models loaded from a volume-mounted PVC (pvc://model-path)
                    type: string
                required:
                - uri
                type: object
              prefill:
                description: Prefill is the prefill portion of the spec
                properties:
                  acceleratorTypes:
                    description: |-
                      pod
                      AcceleratorTypes determines the set of accelerators on which
                      this pod will be run. Any matching accelerator type can be used
                      to place the model pods.This will override base config when present
                    properties:
                      labelKey:
                        description: |-
                          node label key that identifies the accelerator type for the node
                          e.g., nvidia.com/gpu.product
                        type: string
                      labelValues:
                        description: |-
                          node label values that will be matched against for pod scheduling.
                          e.g., [A100, H100]
                        items:
                          type: string
                        minItems: 1
                        type: array
                    required:
                    - labelKey
                    - labelValues
                    type: object
                  containers:
                    description: Container holds vllm container container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  initContainers:
                    description: InitContainers holds vllm init container details
                      that will be overridden from base config when present.
                    items:
                      description: ContainerSpec defines container-level configuration.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps or Secrets
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: Optional text to prepend to the name
                                  of each environment variable. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: Image that is used to spawn container if present
                            will override base config
                          type: string
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                  request:
                                    description: |-
                                      Request is the name chosen for a request in the referenced claim.
                                      If empty, everything from the claim is made available, otherwise
                                      only the result of this request.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  parallelism:
                    description: |-
                      vllm
                      Parallelism specifies vllm parallelism that will be overridden from base config when present.
                    properties:
                      tensor:
                        default: 1
                        description: |-
                          TensorParallelism corresponds to the same argument in vllm
                          This also corresponds to number of GPUs
                        format: int32
                        minimum: 0
                        nullable: true
                        type: integer
                    type: object
                  replicas:
                    default: 1
                    description: Replicas defines the desired number of replicas for
                      this deployment.
                    format: int32
                    minimum: 0
                    nullable: true
                    type: integer
                type: object
              routing:
                description: Routing provides information needed to create configuration
                  for routing
                properties:
                  modelName:
                    description: |-
                      // CreateInferencePool indicates if inference pool resource will be created
                      CreateInferencePool bool `json:"createInferencePool"`

                      ModelName is the model field within inference request
                      This should be unique across ModelService objects.

                      If the name is reused, an error will be
                      shown on the status of a ModelService that attempted to reuse.
                      The oldest ModelService, based on creation timestamp, will be selected
                      to remain valid. In the event of a race condition, one will be selected
                      arbitrarily.

                      refer to https://gateway-api-inference-extension.sigs.k8s.io
                      for relationship between model name, inference pool, and inference model

                      From GIE:
                      ModelName is the name of the model as it will be set in the "model" parameter for an incoming request.
                      ModelNames must be unique for a referencing InferencePool
                      (names can be reused for a different pool in the same cluster).
                      The modelName with the oldest creation timestamp is retained, and the incoming
                      InferenceModel is sets the Ready status to false with a corresponding reason.
                      In the rare case of a race condition, one Model will be selected randomly to be considered valid, and the other rejected.
                      Names can be reserved without an underlying model configured in the pool.
                      This can be done by specifying a target model and setting the weight to zero,
                      an error will be returned specifying that no valid target model is found.
                    maxLength: 256
                    type: string
                    x-kubernetes-validations:
                    - message: modelName is immutable
                      rule: self == oldSelf
                  ports:
                    description: |-
                      Ports is a list of named ports
                      These can be referenced by name in configuration of base configuration or model services
                    items:
                      properties:
                        name:
                          description: Name that can be used in place of port number
                            in templates
                          type: string
                        port:
                          description: Value of port
                          format: int32
                          minimum: 1
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                required:
                - modelName
                type: object
            required:
            - modelArtifacts
            - routing
            type: object
          status:
            description: ModelServiceStatus defines the observed state of ModelService
            properties:
              conditions:
                description: |-
                  Combined deployment conditions from prefill and decode deployments
                  Condition types should be prefixed to indicate their origin
                  Example types: "PrefillAvailable", "DecodeProgressing", etc.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              configMapNames:
                description: |-
                  ConfigMapNames identifies the configmap used for prefill and decode
                  if ConfigMapNames is yet to be created,
                  this reference will be an empty list
                items:
                  type: string
                type: array
              decodeAvailable:
                format: int32
                type: integer
              decodeDeploymentRef:
                description: |-
                  DecodeDeploymentRef identifies the decode deployment
                  if decode deployment is yet to be created,
                  this reference will be nil
                type: string
              decodeReady:
                description: READY and AVAILABLE for decode
                type: string
              decodeServiceAccountRef:
                description: |-
                  DecodeServiceAccountRef identifies the service account for decode
                  if DecodeServiceAccountRef is yet to be created,
                  this reference will be nil
                type: string
              eppAvailable:
                format: int32
                type: integer
              eppDeploymentRef:
                description: |-
                  EppDeploymentRef identifies the epp deployment
                  if epp deployment is yet to be created,
                  this reference will be nil
                type: string
              eppReady:
                description: READY and AVAILABLE for Epp
                type: string
              eppRoleBinding:
                description: |-
                  EppRoleBinding identifies the rolebinding for Epp
                  if EppRoleBinding is yet to be created,
                  this reference will be nil
                type: string
              inferenceModelRef:
                description: |-
                  InferenceModelRef identifies the inference model resource
                  if inference model is yet to be created,
                  this reference will be nil
                type: string
              inferencePoolRef:
                description: |-
                  InferencePoolRef identifies the inference pool resource
                  if inference pool is yet to be created,
                  this reference will be nil
                type: string
              prefillAvailable:
                format: int32
                type: integer
              prefillDeploymentRef:
                description: |-
                  PrefillDeploymentRef identifies the prefill deployment
                  if prefill stanza is omitted, or if prefill deployment is yet to be created,
                  this reference will be nil
                type: string
              prefillReady:
                description: READY and AVAILABLE for prefill
                type: string
              prefillServiceAccountRef:
                description: |-
                  PDServiceAccountRef identifies the service account for PD
                  if PDServiceAccountRef is yet to be created,
                  this reference will be nil
                type: string
            required:
            - decodeAvailable
            - decodeReady
            - eppAvailable
            - eppReady
            - prefillAvailable
            - prefillReady
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-llm-d-modelservice
  namespace: llm-d
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-llm-d-modelservice-epp-metrics-scrape
  namespace: llm-d
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-master
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-leader-election
  namespace: llm-d
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-admin
rules:
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices
  verbs:
  - '*'
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-editor
rules:
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-endpoint-picker
rules:
- apiGroups:
  - inference.networking.x-k8s.io
  resources:
  - inferencepools
  - inferencemodels
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-epp-metrics-scrape
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-manager
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - inference.networking.x-k8s.io
  resources:
  - inferencemodels
  - inferencepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices/finalizers
  verbs:
  - update
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-metrics-auth
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-viewer
rules:
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - llm-d.ai
  resources:
  - modelservices/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-leader-election
  namespace: llm-d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: llm-d-modelservice-leader-election
subjects:
- kind: ServiceAccount
  name: llm-d-llm-d-modelservice
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-llm-d-modelservice-epp-metrics-scrape
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: llm-d-modelservice-epp-metrics-scrape
subjects:
- kind: ServiceAccount
  name: llm-d-llm-d-modelservice-epp-metrics-scrape
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-endpoint-picker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: llm-d-modelservice-endpoint-picker
subjects:
- kind: ServiceAccount
  name: llm-d-llm-d-modelservice
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: llm-d-modelservice-manager
subjects:
- kind: ServiceAccount
  name: llm-d-llm-d-modelservice
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-metrics-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: llm-d-modelservice-metrics-auth
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: llm-d-llm-d-modelservice
  namespace: llm-d
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: sample-application
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: meta-llama-llama-3-2-3b-instruct-endpoint-picker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: llm-d-modelservice-epp-metrics-scrape
subjects:
- kind: ServiceAccount
  name: meta-llama-llama-3-2-3b-instruct-epp-sa
  namespace: llm-d
---
apiVersion: v1
data:
  decodeDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    spec:
      template:
        spec:
          tolerations:
            - effect: NoSchedule
              key: nvidia.com/gpu
              operator: Exists
          initContainers:
            - name: routing-proxy
              image: ghcr.io/llm-d/llm-d-routing-sidecar:0.0.6
              securityContext:
                capabilities:
                  drop:
                    - MKNOD
                allowPrivilegeEscalation: false
              args:
                - "--port=8000"
                - "--vllm-port=8001"
              ports:
                - containerPort: 8000
                  protocol: TCP
              restartPolicy: Always
              imagePullPolicy: IfNotPresent
              livenessProbe:
                tcpSocket:
                  port: 8000
                failureThreshold: 3
                periodSeconds: 5
              readinessProbe:
                tcpSocket:
                  port: 8000
                failureThreshold: 3
                periodSeconds: 5
          containers:
            - name: vllm
              image: ghcr.io/llm-d/llm-d:0.0.8
              imagePullPolicy: IfNotPresent
              securityContext:
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - MKNOD
              command:
                - vllm
                - serve
                - {{ default (print "/models/" .ModelPath) .HFModelName }}
              args:
                - "--port"
                - "8001"
              env:
                - name: HOME
                  value: /home
                - name: VLLM_LOGGING_LEVEL
                  value: INFO
                - name: UCX_TLS
                  value: "^cuda_ipc"
                {{- if .HFModelName }}
                - name: HF_HUB_CACHE
                  value: /models
                {{- end }}
              startupProbe:
                httpGet:
                  path: /health
                  port: 8001
                failureThreshold: 60
                initialDelaySeconds: 15
                periodSeconds: 30
                timeoutSeconds: 5
              livenessProbe:
                tcpSocket:
                  port: 8001
                failureThreshold: 3
                periodSeconds: 5
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8001
                failureThreshold: 3
                periodSeconds: 5
              volumeMounts:
                - name: home
                  mountPath: /home
                - name: dshm
                  mountPath: /dev/shm
                {{- if .HFModelName }}
                - name: model-cache
                  mountPath: /models
                {{- else }}
                - name: model-storage
                  mountPath: /models
                  readOnly: true
                {{- end }}
          volumes:
            - name: home
              emptyDir: {}
            - name: dshm
              emptyDir:
                medium: Memory
                sizeLimit: 1Gi
            {{- if .HFModelName }}
            - name: model-cache
              emptyDir: {}
            {{- end }}
  decodeService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: vllm
        port: 8000
        protocol: TCP
  eppDeployment: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/gateway:
    llm-d-inference-gateway\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/gateway:
    llm-d-inference-gateway\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/gateway:
    llm-d-inference-gateway\n    spec:\n      containers:\n        - args:\n            -
    --poolName\n            - \"{{ .InferencePoolName }}\"\n            - --poolNamespace\n
    \           - \"{{ .ModelServiceNamespace }}\"\n            - -v\n            -
    \"4\"\n            - --zap-encoder\n            - json\n            - --grpcPort\n
    \           - \"9002\"\n            - --grpcHealthPort\n            - \"9003\"\n
    \         env:\n          \n          - name: ENABLE_KVCACHE_AWARE_SCORER\n            value:
    true\n          - name: ENABLE_LOAD_AWARE_SCORER\n            value: true\n          -
    name: ENABLE_PREFIX_AWARE_SCORER\n            value: true\n          - name: ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: KVCACHE_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: KVCACHE_INDEXER_REDIS_ADDR\n            value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \         - name: LOAD_AWARE_SCORER_WEIGHT\n            value: 1\n          -
    name: PD_ENABLED\n            value: true\n          - name: PD_PROMPT_LEN_THRESHOLD\n
    \           value: 10\n          - name: PREFILL_ENABLE_KVCACHE_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_LOAD_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_PREFIX_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_KVCACHE_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_KVCACHE_INDEXER_REDIS_ADDR\n            value:
    llm-d-redis-master.llm-d.svc.cluster.local:8100\n          - name: PREFILL_LOAD_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_PREFIX_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: PREFILL_SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n
    \         - name: PREFIX_AWARE_SCORER_WEIGHT\n            value: 2\n          -
    name: SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n          \n          {{-
    if .HFModelName }}\n          - name: HF_TOKEN\n            valueFrom:\n              secretKeyRef:\n
    \               name: llm-d-hf-token\n                key: HF_TOKEN\n          {{-
    end }}\n          image: ghcr.io/llm-d/llm-d-inference-scheduler:0.0.4\n          imagePullPolicy:
    Always\n          resources:\n            requests:\n              cpu: 256m\n
    \             memory: 500Mi\n          livenessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          readinessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          name: epp\n          ports:\n            -
    name: grpc\n              containerPort: 9002\n              protocol: TCP\n            -
    name: grpc-health\n              containerPort: 9003\n              protocol:
    TCP\n            - name: metrics\n              containerPort: 9090\n              protocol:
    TCP\n"
  eppService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/gateway: llm-d-inference-gateway
        llmd.ai/gather-metrics: "true"
    spec:
      ports:
        - port: 9002
          protocol: TCP
          name: grpc
        - port: 9003
          protocol: TCP
          name: grpc-health
        - port: 9090
          protocol: TCP
          name: metrics
      type: NodePort
      selector:
        app.kubernetes.io/gateway: llm-d-inference-gateway
  inferenceModel: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferenceModel
  inferencePool: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferencePool
    spec:
      targetPortNumber: 8000
  prefillDeployment: "apiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n
    \   spec:\n      tolerations:\n        - effect: NoSchedule\n          key: nvidia.com/gpu\n
    \         operator: Exists\n      containers:\n        - name: vllm\n          image:
    ghcr.io/llm-d/llm-d:0.0.8\n          imagePullPolicy: IfNotPresent\n          securityContext:\n
    \           allowPrivilegeEscalation: false\n          command:\n            -
    vllm\n            - serve\n            - {{ default (print \"/models/\" .ModelPath)
    .HFModelName }}\n          args:\n            - \"--port\"\n            - \"8000\"\n
    \         env:\n            - name: HOME\n              value: /home\n            \n
    \           - name: VLLM_LOGGING_LEVEL\n              value: INFO\n            -
    name: UCX_TLS\n              value: \"^cuda_ipc\"\n            {{- if .HFModelName
    }}\n            - name: HF_HUB_CACHE\n              value: /models\n            {{-
    end }}\n          startupProbe:\n            httpGet:\n              path: /health\n
    \             port: 8000\n            failureThreshold: 60\n            initialDelaySeconds:
    15\n            periodSeconds: 30\n            timeoutSeconds: 5\n          livenessProbe:\n
    \           tcpSocket:\n              port: 8000\n            failureThreshold:
    3\n            periodSeconds: 5\n          readinessProbe:\n            httpGet:\n
    \             path: /health\n              port: 8000\n            failureThreshold:
    3\n            periodSeconds: 5\n          volumeMounts:\n            - name:
    home\n              mountPath: /home\n            - name: dshm\n              mountPath:
    /dev/shm\n            {{- if .HFModelName }}\n            - name: model-cache\n
    \             mountPath: /models\n            {{- else }}\n            - name:
    model-storage\n              mountPath: /models\n              readOnly: true\n
    \           {{- end }}\n          ports:\n            - containerPort: 8000\n
    \             protocol: TCP\n      volumes:\n        - name: home\n          emptyDir:
    {}\n        - name: dshm\n          emptyDir:\n            medium: Memory\n            sizeLimit:
    1Gi\n        {{ if .HFModelName }}\n        - name: model-cache\n          emptyDir:
    {}\n        {{ end }}\n"
  prefillService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: vllm
        port: 8000
        protocol: TCP
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: basic-gpu-preset
  namespace: llm-d
---
apiVersion: v1
data:
  decodeDeployment: "apiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n    spec:\n
    \     tolerations:\n        - effect: NoSchedule\n          key: nvidia.com/gpu\n
    \         operator: Exists\n      initContainers:\n        - name: routing-proxy\n
    \         image: ghcr.io/llm-d/llm-d-routing-sidecar:0.0.6\n          securityContext:\n
    \           securityContext:\n              allowPrivilegeEscalation: false\n
    \             capabilities:\n                drop:\n                - MKNOD\n
    \         args:\n            - \"--port=8000\"\n            - \"--vllm-port=8001\"\n
    \           - \"--connector=nixlv2\"\n          ports:\n            - containerPort:
    8000\n              protocol: TCP\n          restartPolicy: Always\n          imagePullPolicy:
    IfNotPresent\n          livenessProbe:\n            tcpSocket:\n              port:
    8000\n            failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           tcpSocket:\n              port: 8000\n            failureThreshold:
    3\n            periodSeconds: 5\n      containers:\n        - name: vllm\n          image:
    ghcr.io/llm-d/llm-d:0.0.8\n          imagePullPolicy: IfNotPresent\n          securityContext:\n
    \           capabilities:\n              drop:\n                - MKNOD\n            allowPrivilegeEscalation:
    false\n          command:\n            - vllm\n            - serve\n            -
    {{ default (print \"/models/\" .ModelPath) .HFModelName }}\n          args:\n
    \           - \"--port\"\n            - \"8001\"\n            - \"--kv-transfer-config\"\n
    \           - '{\"kv_connector\":\"MultiConnector\",\"kv_role\":\"kv_both\",\"kv_connector_extra_config\":{\"connectors\":[{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"},{\"kv_connector\":\"LMCacheConnectorV1\",\"kv_role\":\"kv_both\"}]}}'\n
    \         env:\n            - name: HOME\n              value: /home\n            \n
    \           - name: VLLM_LOGGING_LEVEL\n              value: INFO\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_PORT\n              value: \"5557\"\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_HOST\n              valueFrom:\n                fieldRef:\n
    \                 fieldPath: status.podIP\n            - name: LMCACHE_DISTRIBUTED_URL\n
    \             valueFrom:\n                fieldRef:\n                  fieldPath:
    status.podIP\n            - name: UCX_TLS\n              value: \"^cuda_ipc\"\n
    \           - name: LMCACHE_ENABLE_DEBUG\n              value: \"True\"\n            -
    name: LMCACHE_LOCAL_CPU\n              value: \"True\"\n            - name: LMCACHE_MAX_LOCAL_CPU_SIZE\n
    \             value: \"5\"\n            - name: LMCACHE_MAX_LOCAL_DISK_SIZE\n
    \             value: \"10\"\n            - name: LMCACHE_CHUNK_SIZE\n              value:
    \"256\"\n            - name: LMCACHE_LOOKUP_URL\n              value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \           {{- if .HFModelName }}\n            - name: HF_HUB_CACHE\n              value:
    /models\n            {{- end }}\n          startupProbe:\n            httpGet:\n
    \             path: /health\n              port: 8001\n            failureThreshold:
    60\n            initialDelaySeconds: 15\n            periodSeconds: 30\n            timeoutSeconds:
    5\n          livenessProbe:\n            tcpSocket:\n              port: 8001\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           httpGet:\n              path: /health\n              port: 8001\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          volumeMounts:\n
    \           - name: home\n              mountPath: /home\n            - name:
    dshm\n              mountPath: /dev/shm\n            {{- if .HFModelName }}\n
    \           - name: model-cache\n              mountPath: /models\n            {{-
    else }}\n            - name: model-storage\n              mountPath: /models\n
    \             readOnly: true\n            {{- end }}\n          ports:\n            -
    containerPort: 5557\n              protocol: TCP\n            - containerPort:
    80\n              protocol: TCP\n      volumes:\n        - name: home\n          emptyDir:
    {}\n        - name: dshm\n          emptyDir:\n            medium: Memory\n            sizeLimit:
    1Gi\n        {{- if .HFModelName }}\n        - name: model-cache\n          emptyDir:
    {}\n        {{- end }}\n"
  decodeService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP
  eppDeployment: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/gateway:
    llm-d-inference-gateway\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/gateway:
    llm-d-inference-gateway\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/gateway:
    llm-d-inference-gateway\n    spec:\n      containers:\n        - args:\n            -
    --poolName\n            - \"{{ .InferencePoolName }}\"\n            - --poolNamespace\n
    \           - \"{{ .ModelServiceNamespace }}\"\n            - -v\n            -
    \"4\"\n            - --zap-encoder\n            - json\n            - --grpcPort\n
    \           - \"9002\"\n            - --grpcHealthPort\n            - \"9003\"\n
    \         env:\n          \n          - name: ENABLE_KVCACHE_AWARE_SCORER\n            value:
    true\n          - name: ENABLE_LOAD_AWARE_SCORER\n            value: true\n          -
    name: ENABLE_PREFIX_AWARE_SCORER\n            value: true\n          - name: ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: KVCACHE_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: KVCACHE_INDEXER_REDIS_ADDR\n            value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \         - name: LOAD_AWARE_SCORER_WEIGHT\n            value: 1\n          -
    name: PD_ENABLED\n            value: true\n          - name: PD_PROMPT_LEN_THRESHOLD\n
    \           value: 10\n          - name: PREFILL_ENABLE_KVCACHE_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_LOAD_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_PREFIX_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_KVCACHE_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_KVCACHE_INDEXER_REDIS_ADDR\n            value:
    llm-d-redis-master.llm-d.svc.cluster.local:8100\n          - name: PREFILL_LOAD_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_PREFIX_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: PREFILL_SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n
    \         - name: PREFIX_AWARE_SCORER_WEIGHT\n            value: 2\n          -
    name: SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n          \n          {{-
    if .HFModelName }}\n          - name: HF_TOKEN\n            valueFrom:\n              secretKeyRef:\n
    \               name: llm-d-hf-token\n                key: HF_TOKEN\n          {{-
    end }}\n          image: ghcr.io/llm-d/llm-d-inference-scheduler:0.0.4\n          imagePullPolicy:
    Always\n          resources:\n            requests:\n              cpu: 256m\n
    \             memory: 500Mi\n          livenessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          readinessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          name: epp\n          ports:\n            -
    name: grpc\n              containerPort: 9002\n              protocol: TCP\n            -
    name: grpc-health\n              containerPort: 9003\n              protocol:
    TCP\n            - name: metrics\n              containerPort: 9090\n              protocol:
    TCP\n"
  eppService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/gateway: llm-d-inference-gateway
        llmd.ai/gather-metrics: "true"
    spec:
      ports:
        - port: 9002
          protocol: TCP
          name: grpc
        - port: 9003
          protocol: TCP
          name: grpc-health
        - port: 9090
          protocol: TCP
          name: metrics
      type: NodePort
      selector:
        app.kubernetes.io/gateway: llm-d-inference-gateway
  inferenceModel: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferenceModel
  inferencePool: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferencePool
    spec:
      targetPortNumber: 8000
  prefillDeployment: "apiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n
    \   spec:\n      tolerations:\n        - effect: NoSchedule\n          key: nvidia.com/gpu\n
    \         operator: Exists\n      containers:\n        - name: vllm\n          image:
    ghcr.io/llm-d/llm-d:0.0.8\n          imagePullPolicy: IfNotPresent\n          securityContext:\n
    \           allowPrivilegeEscalation: false\n          command:\n            -
    vllm\n            - serve\n            - {{ default (print \"/models/\" .ModelPath)
    .HFModelName }}\n          args:\n            - \"--port\"\n            - \"8000\"\n
    \           - \"--kv-transfer-config\"\n            - '{\"kv_connector\":\"MultiConnector\",\"kv_role\":\"kv_both\",\"kv_connector_extra_config\":{\"connectors\":[{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"},{\"kv_connector\":\"LMCacheConnectorV1\",\"kv_role\":\"kv_both\"}]}}'\n
    \         env:\n            - name: HOME\n              value: /home\n            \n
    \           - name: VLLM_LOGGING_LEVEL\n              value: INFO\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_PORT\n              value: \"5557\"\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_HOST\n              valueFrom:\n                fieldRef:\n
    \                 fieldPath: status.podIP\n            - name: LMCACHE_DISTRIBUTED_URL\n
    \             valueFrom:\n                fieldRef:\n                  fieldPath:
    status.podIP\n            - name: UCX_TLS\n              value: \"^cuda_ipc\"\n
    \           - name: LMCACHE_ENABLE_DEBUG\n              value: \"True\"\n            -
    name: LMCACHE_LOCAL_CPU\n              value: \"True\"\n            - name: LMCACHE_MAX_LOCAL_CPU_SIZE\n
    \             value: \"5\"\n            - name: LMCACHE_MAX_LOCAL_DISK_SIZE\n
    \             value: \"10\"\n            - name: LMCACHE_CHUNK_SIZE\n              value:
    \"256\"\n            - name: LMCACHE_LOOKUP_URL\n              value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \           {{- if .HFModelName }}\n            - name: HF_HUB_CACHE\n              value:
    /models\n            {{- end }}\n          startupProbe:\n            httpGet:\n
    \             path: /health\n              port: 8000\n            failureThreshold:
    60\n            initialDelaySeconds: 15\n            periodSeconds: 30\n            timeoutSeconds:
    5\n          livenessProbe:\n            tcpSocket:\n              port: 8000\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           httpGet:\n              path: /health\n              port: 8000\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          volumeMounts:\n
    \           - name: home\n              mountPath: /home\n            - name:
    dshm\n              mountPath: /dev/shm\n            {{- if .HFModelName }}\n
    \           - name: model-cache\n              mountPath: /models\n            {{-
    else }}\n            - name: model-storage\n              mountPath: /models\n
    \             readOnly: true\n            {{- end }}\n          ports:\n            -
    containerPort: 5557\n              protocol: TCP\n            - containerPort:
    80\n              protocol: TCP\n      volumes:\n        - name: home\n          emptyDir:
    {}\n        - name: dshm\n          emptyDir:\n            medium: Memory\n            sizeLimit:
    1Gi\n        {{ if .HFModelName }}\n        - name: model-cache\n          emptyDir:
    {}\n        {{ end }}\n"
  prefillService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: basic-gpu-with-nixl-and-redis-lookup-preset
  namespace: llm-d
---
apiVersion: v1
data:
  decodeDeployment: "apiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n    spec:\n
    \     tolerations:\n        - effect: NoSchedule\n          key: nvidia.com/gpu\n
    \         operator: Exists\n      initContainers:\n        - name: routing-proxy\n
    \         image: ghcr.io/llm-d/llm-d-routing-sidecar:0.0.6\n          securityContext:\n
    \           capabilities:\n              drop:\n                - MKNOD\n            allowPrivilegeEscalation:
    false\n          args:\n            - \"--port=8000\"\n            - \"--vllm-port=8001\"\n
    \           - \"--connector=nixlv2\"\n          ports:\n            - containerPort:
    8000\n              protocol: TCP\n          restartPolicy: Always\n          imagePullPolicy:
    IfNotPresent\n          livenessProbe:\n            tcpSocket:\n              port:
    8000\n            failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           tcpSocket:\n              port: 8000\n            failureThreshold:
    3\n            periodSeconds: 5\n      containers:\n        - name: vllm\n          image:
    ghcr.io/llm-d/llm-d:0.0.8\n          imagePullPolicy: IfNotPresent\n          securityContext:\n
    \           securityContext:\n              allowPrivilegeEscalation: false\n
    \             capabilities:\n                drop:\n                - MKNOD\n
    \         command:\n            - vllm\n            - serve\n            - {{
    default (print \"/models/\" .ModelPath) .HFModelName }}\n          args:\n            -
    \"--port\"\n            - \"8001\"\n            - \"--kv-transfer-config\"\n            -
    '{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"}'\n          env:\n
    \           - name: HOME\n              value: /home\n            \n            -
    name: VLLM_LOGGING_LEVEL\n              value: INFO\n            - name: VLLM_NIXL_SIDE_CHANNEL_PORT\n
    \             value: \"5557\"\n            - name: VLLM_NIXL_SIDE_CHANNEL_HOST\n
    \             valueFrom:\n                fieldRef:\n                  fieldPath:
    status.podIP\n            - name: POD_IP\n              valueFrom:\n                fieldRef:\n
    \                 apiVersion: v1\n                  fieldPath: status.podIP\n
    \           - name: LMCACHE_DISTRIBUTED_URL\n              value: ${POD_IP}:8200\n
    \           - name: UCX_TLS\n              value: \"^cuda_ipc\"\n            -
    name: LMCACHE_LOOKUP_URL\n              value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \           {{- if .HFModelName }}\n            - name: HF_HUB_CACHE\n              value:
    /models\n            {{- end }}\n          startupProbe:\n            httpGet:\n
    \             path: /health\n              port: 8001\n            failureThreshold:
    60\n            initialDelaySeconds: 15\n            periodSeconds: 30\n            timeoutSeconds:
    5\n          livenessProbe:\n            tcpSocket:\n              port: 8001\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           httpGet:\n              path: /health\n              port: 8001\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          volumeMounts:\n
    \           - name: home\n              mountPath: /home\n            - name:
    dshm\n              mountPath: /dev/shm\n            {{- if .HFModelName }}\n
    \           - name: model-cache\n              mountPath: /models\n            {{-
    else }}\n            - name: model-storage\n              mountPath: /models\n
    \             readOnly: true\n            {{- end }}\n          ports:\n            -
    containerPort: 5557\n              protocol: TCP\n      volumes:\n        - name:
    home\n          emptyDir: {}\n        - name: dshm\n          emptyDir:\n            medium:
    Memory\n            sizeLimit: 1Gi\n        {{- if .HFModelName }}\n        -
    name: model-cache\n          emptyDir: {}\n        {{- end }}\n"
  decodeService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP
  eppDeployment: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/gateway:
    llm-d-inference-gateway\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/gateway:
    llm-d-inference-gateway\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/gateway:
    llm-d-inference-gateway\n    spec:\n      containers:\n        - args:\n            -
    --poolName\n            - \"{{ .InferencePoolName }}\"\n            - --poolNamespace\n
    \           - \"{{ .ModelServiceNamespace }}\"\n            - -v\n            -
    \"4\"\n            - --zap-encoder\n            - json\n            - --grpcPort\n
    \           - \"9002\"\n            - --grpcHealthPort\n            - \"9003\"\n
    \         env:\n          \n          - name: ENABLE_KVCACHE_AWARE_SCORER\n            value:
    true\n          - name: ENABLE_LOAD_AWARE_SCORER\n            value: true\n          -
    name: ENABLE_PREFIX_AWARE_SCORER\n            value: true\n          - name: ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: KVCACHE_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: KVCACHE_INDEXER_REDIS_ADDR\n            value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \         - name: LOAD_AWARE_SCORER_WEIGHT\n            value: 1\n          -
    name: PD_ENABLED\n            value: true\n          - name: PD_PROMPT_LEN_THRESHOLD\n
    \           value: 10\n          - name: PREFILL_ENABLE_KVCACHE_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_LOAD_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_PREFIX_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_KVCACHE_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_KVCACHE_INDEXER_REDIS_ADDR\n            value:
    llm-d-redis-master.llm-d.svc.cluster.local:8100\n          - name: PREFILL_LOAD_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_PREFIX_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: PREFILL_SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n
    \         - name: PREFIX_AWARE_SCORER_WEIGHT\n            value: 2\n          -
    name: SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n          \n          {{-
    if .HFModelName }}\n          - name: HF_TOKEN\n            valueFrom:\n              secretKeyRef:\n
    \               name: llm-d-hf-token\n                key: HF_TOKEN\n          {{-
    end }}\n          image: ghcr.io/llm-d/llm-d-inference-scheduler:0.0.4\n          imagePullPolicy:
    Always\n          resources:\n            requests:\n              cpu: 256m\n
    \             memory: 500Mi\n          livenessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          readinessProbe:\n            failureThreshold:
    3\n            grpc:\n              port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          name: epp\n          ports:\n            -
    name: grpc\n              containerPort: 9002\n              protocol: TCP\n            -
    name: grpc-health\n              containerPort: 9003\n              protocol:
    TCP\n            - name: metrics\n              containerPort: 9090\n              protocol:
    TCP\n"
  eppService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/gateway: llm-d-inference-gateway
        llmd.ai/gather-metrics: "true"
    spec:
      ports:
        - port: 9002
          protocol: TCP
          name: grpc
        - port: 9003
          protocol: TCP
          name: grpc-health
        - port: 9090
          protocol: TCP
          name: metrics
      type: NodePort
      selector:
        app.kubernetes.io/gateway: llm-d-inference-gateway
  inferenceModel: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferenceModel
  inferencePool: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferencePool
    spec:
      targetPortNumber: 8000
  prefillDeployment: "apiVersion: apps/v1\nkind: Deployment\nspec:\n  template:\n
    \   spec:\n      tolerations:\n        - effect: NoSchedule\n          key: nvidia.com/gpu\n
    \         operator: Exists\n      containers:\n        - name: vllm\n          image:
    ghcr.io/llm-d/llm-d:0.0.8\n          imagePullPolicy: IfNotPresent\n          securityContext:\n
    \           allowPrivilegeEscalation: false\n          command:\n            -
    vllm\n            - serve\n            - {{ default (print \"/models/\" .ModelPath)
    .HFModelName }}\n          args:\n            - \"--port\"\n            - \"8000\"\n
    \           - \"--kv-transfer-config\"\n            - '{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"}'\n
    \         env:\n            - name: HOME\n              value: /home\n            \n
    \           - name: VLLM_LOGGING_LEVEL\n              value: INFO\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_PORT\n              value: \"5557\"\n            -
    name: VLLM_NIXL_SIDE_CHANNEL_HOST\n              valueFrom:\n                fieldRef:\n
    \                 fieldPath: status.podIP\n            - name: POD_IP\n              valueFrom:\n
    \               fieldRef:\n                  apiVersion: v1\n                  fieldPath:
    status.podIP\n            - name: LMCACHE_DISTRIBUTED_URL\n              value:
    ${POD_IP}:8200\n            - name: UCX_TLS\n              value: \"^cuda_ipc\"\n
    \           - name: LMCACHE_LOOKUP_URL\n              value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \           {{- if .HFModelName }}\n            - name: HF_HUB_CACHE\n              value:
    /models\n            {{- end }}\n          startupProbe:\n            httpGet:\n
    \             path: /health\n              port: 8000\n            failureThreshold:
    60\n            initialDelaySeconds: 15\n            periodSeconds: 30\n            timeoutSeconds:
    5\n          livenessProbe:\n            tcpSocket:\n              port: 8000\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          readinessProbe:\n
    \           httpGet:\n              path: /health\n              port: 8000\n
    \           failureThreshold: 3\n            periodSeconds: 5\n          volumeMounts:\n
    \           - name: home\n              mountPath: /home\n            - name:
    dshm\n              mountPath: /dev/shm\n            {{- if .HFModelName }}\n
    \           - name: model-cache\n              mountPath: /models\n            {{-
    else }}\n            - name: model-storage\n              mountPath: /models\n
    \             readOnly: true\n            {{- end }}\n          ports:\n            -
    containerPort: 5557\n              protocol: TCP\n      volumes:\n        - name:
    home\n          emptyDir: {}\n        - name: dshm\n          emptyDir:\n            medium:
    Memory\n            sizeLimit: 1Gi\n        {{ if .HFModelName }}\n        - name:
    model-cache\n          emptyDir: {}\n        {{ end }}\n"
  prefillService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: nixl
        port: 5557
        protocol: TCP
      - name: vllm
        port: 8000
        protocol: TCP
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: basic-gpu-with-nixl-preset
  namespace: llm-d
---
apiVersion: v1
data:
  decodeDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    spec:
      template:
        spec:
          tolerations:
            - effect: NoSchedule
              key: nvidia.com/gpu
              operator: Exists
          initContainers:
            - name: routing-proxy
              image: ghcr.io/llm-d/llm-d-routing-sidecar:0.0.6
              securityContext:
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - MKNOD
              args:
                - "--port=8000"
                - "--vllm-port=8001"
              ports:
                - containerPort: 8000
                  protocol: TCP
              restartPolicy: Always
              imagePullPolicy: IfNotPresent
          containers:
            - name: vllm
              image: ghcr.io/llm-d/llm-d-inference-sim:0.0.4
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities:
                  drop:
                    - MKNOD
                allowPrivilegeEscalation: false
              args:
                - "--port"
                - "8001"
              env:
                - name: HOME
                  value: /home
              volumeMounts:
                - name: home
                  mountPath: /home
              ports:
                - containerPort: 5557
                  protocol: TCP
          volumes:
            - name: home
              emptyDir: {}
  decodeService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: vllm
        port: 8000
        protocol: TCP
  eppDeployment: "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app.kubernetes.io/gateway:
    llm-d-inference-gateway\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/gateway:
    llm-d-inference-gateway\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/gateway:
    llm-d-inference-gateway\n    spec:\n      containers:\n        - args:\n            -
    --poolName\n            - \"{{ .InferencePoolName }}\"\n            - --poolNamespace\n
    \           - \"{{ .ModelServiceNamespace }}\"\n            - -v\n            -
    \"4\"\n            - --zap-encoder\n            - json\n            - --grpcPort\n
    \           - \"9002\"\n            - --grpcHealthPort\n            - \"9003\"\n
    \         env:\n          \n          - name: ENABLE_KVCACHE_AWARE_SCORER\n            value:
    true\n          - name: ENABLE_LOAD_AWARE_SCORER\n            value: true\n          -
    name: ENABLE_PREFIX_AWARE_SCORER\n            value: true\n          - name: ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: KVCACHE_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: KVCACHE_INDEXER_REDIS_ADDR\n            value: llm-d-redis-master.llm-d.svc.cluster.local:8100\n
    \         - name: LOAD_AWARE_SCORER_WEIGHT\n            value: 1\n          -
    name: PD_ENABLED\n            value: true\n          - name: PD_PROMPT_LEN_THRESHOLD\n
    \           value: 10\n          - name: PREFILL_ENABLE_KVCACHE_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_LOAD_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_PREFIX_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_ENABLE_SESSION_AWARE_SCORER\n
    \           value: true\n          - name: PREFILL_KVCACHE_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_KVCACHE_INDEXER_REDIS_ADDR\n            value:
    llm-d-redis-master.llm-d.svc.cluster.local:8100\n          - name: PREFILL_LOAD_AWARE_SCORER_WEIGHT\n
    \           value: 1\n          - name: PREFILL_PREFIX_AWARE_SCORER_WEIGHT\n            value:
    1\n          - name: PREFILL_SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n
    \         - name: PREFIX_AWARE_SCORER_WEIGHT\n            value: 2\n          -
    name: SESSION_AWARE_SCORER_WEIGHT\n            value: 1\n          image: ghcr.io/llm-d/llm-d-inference-scheduler:0.0.4\n
    \         imagePullPolicy: Always\n          resources:\n            requests:\n
    \             cpu: 256m\n              memory: 128Mi\n          livenessProbe:\n
    \           failureThreshold: 3\n            grpc:\n              port: 9003\n
    \             service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n            initialDelaySeconds:
    5\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds:
    1\n          readinessProbe:\n            failureThreshold: 3\n            grpc:\n
    \             port: 9003\n              service: \"envoy.service.ext_proc.v3.ExternalProcessor\"\n
    \           initialDelaySeconds: 5\n            periodSeconds: 10\n            successThreshold:
    1\n            timeoutSeconds: 1\n          name: epp\n          ports:\n            -
    name: grpc\n              containerPort: 9002\n              protocol: TCP\n            -
    name: grpc-health\n              containerPort: 9003\n              protocol:
    TCP\n            - name: metrics\n              containerPort: 9090\n              protocol:
    TCP\n"
  eppService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/gateway: llm-d-inference-gateway
        llmd.ai/gather-metrics: "true"
    spec:
      ports:
        - port: 9002
          protocol: TCP
          name: grpc
        - port: 9003
          protocol: TCP
          name: grpc-health
        - port: 9090
          protocol: TCP
          name: metrics
      type: NodePort
      selector:
        app.kubernetes.io/gateway: llm-d-inference-gateway
  inferenceModel: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferenceModel
  inferencePool: |
    apiVersion: inference.networking.x-k8s.io/v1alpha2
    kind: InferencePool
    spec:
      targetPortNumber: 8000
  prefillDeployment: |
    apiVersion: apps/v1
    kind: Deployment
    spec:
      template:
        spec:
          tolerations:
            - effect: NoSchedule
              key: nvidia.com/gpu
              operator: Exists
          containers:
            - name: vllm
              image: ghcr.io/llm-d/llm-d-inference-sim:0.0.4
              imagePullPolicy: IfNotPresent
              securityContext:
                allowPrivilegeEscalation: false
              args:
                - "--port"
                - "8000"
              env:
                - name: HOME
                  value: /home
              volumeMounts:
                - name: home
                  mountPath: /home
              ports:
                - containerPort: 5557
                  protocol: TCP
          volumes:
            - name: home
              emptyDir: {}
  prefillService: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        llmd.ai/gather-metrics: "true"
    spec:
      clusterIP: None
      ports:
      - name: vllm
        port: 8000
        protocol: TCP
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: basic-sim-preset
  namespace: llm-d
---
apiVersion: v1
data:
  master.conf: |-
    dir /data
    # User-supplied master configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of master configuration
  redis.conf: |-
    # User-supplied common configuration:
    # Enable AOF https://redis.io/topics/persistence#append-only-file
    appendonly yes
    # Disable RDB persistence, AOF persistence already enabled.
    save ""
    # End of common configuration
  replica.conf: |-
    dir /data
    # User-supplied replica configuration:
    rename-command FLUSHDB ""
    rename-command FLUSHALL ""
    # End of replica configuration
  users.acl: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-configuration
  namespace: llm-d
---
apiVersion: v1
data:
  ping_liveness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ] && [ "$responseFirstWord" != "MASTERDOWN" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_liveness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_liveness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_liveness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    responseFirstWord=$(echo $response | head -n1 | awk '{print $1;}')
    if [ "$response" != "PONG" ] && [ "$responseFirstWord" != "LOADING" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local.sh: |-
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    [[ -n "$REDIS_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_readiness_local_and_master.sh: |-
    script_dir="$(dirname "$0")"
    exit_status=0
    "$script_dir/ping_readiness_local.sh" $1 || exit_status=$?
    "$script_dir/ping_readiness_master.sh" $1 || exit_status=$?
    exit $exit_status
  ping_readiness_master.sh: |-
    #!/bin/bash

    [[ -f $REDIS_MASTER_PASSWORD_FILE ]] && export REDIS_MASTER_PASSWORD="$(< "${REDIS_MASTER_PASSWORD_FILE}")"
    [[ -n "$REDIS_MASTER_PASSWORD" ]] && export REDISCLI_AUTH="$REDIS_MASTER_PASSWORD"
    response=$(
      timeout -s 15 $1 \
      redis-cli \
        -h $REDIS_MASTER_HOST \
        -p $REDIS_MASTER_PORT_NUMBER \
        ping
    )
    if [ "$?" -eq "124" ]; then
      echo "Timed out"
      exit 1
    fi
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-health
  namespace: llm-d
---
apiVersion: v1
data:
  start-master.sh: |
    #!/bin/bash

    [[ -f $REDIS_PASSWORD_FILE ]] && export REDIS_PASSWORD="$(< "${REDIS_PASSWORD_FILE}")"
    if [[ -f /opt/bitnami/redis/mounted-etc/master.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/redis.conf ]];then
        cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
    fi
    if [[ -f /opt/bitnami/redis/mounted-etc/users.acl ]];then
        cp /opt/bitnami/redis/mounted-etc/users.acl /opt/bitnami/redis/etc/users.acl
    fi
    ARGS=("--port" "${REDIS_PORT}")
    ARGS+=("--protected-mode" "no")
    ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
    ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
    exec redis-server "${ARGS[@]}"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-scripts
  namespace: llm-d
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: llm-d-llm-d-modelservice-epp-metrics-scrape
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-llm-d-modelservice-epp-metrics-scrape-token
  namespace: llm-d
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    control-plane: controller-manager
    helm.sh/chart: llm-d-1.0.22
    llmd.ai/gather-metrics: "true"
  name: llm-d-modelservice
  namespace: llm-d
spec:
  ports:
  - port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/name: llm-d
    control-plane: controller-manager
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-headless
  namespace: llm-d
spec:
  clusterIP: None
  ports:
  - name: tcp-redis
    port: 8100
    targetPort: redis
  selector:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/name: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-master
  namespace: llm-d
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: tcp-redis
    nodePort: null
    port: 8100
    targetPort: redis
  selector:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/name: redis
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    control-plane: controller-manager
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice
  namespace: llm-d
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: modelservice
      app.kubernetes.io/instance: llm-d
      app.kubernetes.io/name: llm-d
      control-plane: controller-manager
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/component: modelservice
        app.kubernetes.io/instance: llm-d
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: llm-d
        app.kubernetes.io/version: "0.1"
        control-plane: controller-manager
        helm.sh/chart: llm-d-1.0.22
    spec:
      containers:
      - args:
        - --leader-elect=false
        - --health-probe-bind-address=:8081
        - --epp-cluster-role
        - llm-d-modelservice-endpoint-picker
        - --epp-pull-secrets
        - ""
        - --pd-pull-secrets
        - ""
        command:
        - /manager
        image: ghcr.io/llm-d/llm-d-model-service:0.0.10
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 250m
            memory: 250Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: llm-d-llm-d-modelservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis
    app.kubernetes.io/version: 7.4.3
    helm.sh/chart: redis-20.13.4
  name: llm-d-redis-master
  namespace: llm-d
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: llm-d
      app.kubernetes.io/name: redis
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: 2a9ab4a5432825504d910f022638674ce88eaefe9f9f595ad8bc107377d104fb
        checksum/health: aff24913d801436ea469d8d374b2ddb3ec4c43ee7ab24663d5f8ff1a1b6991a9
        checksum/scripts: bdec350b84a1ace7cc118db113a21c9f160bde3425b07714e1c0c1da722621cf
        checksum/secret: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: llm-d
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis
        app.kubernetes.io/version: 7.4.3
        helm.sh/chart: redis-20.13.4
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: master
                  app.kubernetes.io/instance: llm-d
                  app.kubernetes.io/name: redis
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: false
      containers:
      - args:
        - -ec
        - /opt/bitnami/scripts/start-scripts/start-master.sh
        command:
        - /bin/bash
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_TLS_ENABLED
          value: "no"
        - name: REDIS_PORT
          value: "6379"
        image: quay.io/sclorg/redis-7-c9s:c9s
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - /health/ping_liveness_local.sh 5
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 6
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - /health/ping_readiness_local.sh 1
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /opt/bitnami/scripts/start-scripts
          name: start-scripts
        - mountPath: /health
          name: health
        - mountPath: /data
          name: redis-data
        - mountPath: /opt/bitnami/redis/mounted-etc
          name: config
        - mountPath: /opt/bitnami/redis/etc/
          name: empty-dir
          subPath: app-conf-dir
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
      enableServiceLinks: true
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: llm-d-redis-master
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 493
          name: llm-d-redis-scripts
        name: start-scripts
      - configMap:
          defaultMode: 493
          name: llm-d-redis-health
        name: health
      - configMap:
          name: llm-d-redis-configuration
        name: config
      - emptyDir: {}
        name: empty-dir
      - emptyDir: {}
        name: redis-data
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  annotations:
    networking.istio.io/service-type: ClusterIP
  labels:
    app.kubernetes.io/component: inference-gateway
    app.kubernetes.io/gateway: llm-d-inference-gateway
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
    istio.io/enable-inference-extproc: "true"
  name: llm-d-inference-gateway
  namespace: llm-d
spec:
  gatewayClassName: istio
  listeners:
  - name: default
    port: 80
    protocol: HTTP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app.kubernetes.io/component: sample-application
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: meta-llama-llama-3-2-3b-instruct
  namespace: llm-d
spec:
  parentRefs:
  - name: llm-d-inference-gateway
  rules:
  - backendRefs:
    - group: inference.networking.x-k8s.io
      kind: InferencePool
      name: meta-llama-llama-3-2-3b-instruct-inference-pool
      port: 8000
    matches:
    - path:
        type: PathPrefix
        value: /
    timeouts:
      backendRequest: 0s
      request: 0s
---
apiVersion: llm-d.ai/v1alpha1
kind: ModelService
metadata:
  labels:
    app.kubernetes.io/component: sample-application
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: meta-llama-llama-3-2-3b-instruct
  namespace: llm-d
spec:
  baseConfigMapRef:
    name: basic-gpu-with-nixl-and-redis-lookup-preset
  decode:
    containers:
    - args:
      - --served-model-name
      - meta-llama/Llama-3.2-3B-Instruct
      env:
      - name: HF_TOKEN
        valueFrom:
          secretKeyRef:
            key: HF_TOKEN
            name: llm-d-hf-token
      name: vllm
      resources:
        limits:
          nvidia.com/gpu: "1"
        requests:
          nvidia.com/gpu: "1"
    replicas: 1
  decoupleScaling: false
  endpointPicker:
    containers:
    - env: null
      name: epp
  modelArtifacts:
    uri: hf://meta-llama/Llama-3.2-3B-Instruct
  prefill:
    containers:
    - args:
      - --served-model-name
      - meta-llama/Llama-3.2-3B-Instruct
      env:
      - name: HF_TOKEN
        valueFrom:
          secretKeyRef:
            key: HF_TOKEN
            name: llm-d-hf-token
      name: vllm
      resources:
        limits:
          nvidia.com/gpu: "1"
        requests:
          nvidia.com/gpu: "1"
    replicas: 1
  routing:
    modelName: meta-llama/Llama-3.2-3B-Instruct
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-llm-d-modelservice-epp-monitor
  namespace: llm-d
spec:
  endpoints:
  - authorization:
      credentials:
        key: token
        name: llm-d-llm-d-modelservice-epp-metrics-scrape-token
    interval: 10s
    path: /metrics
    port: metrics
  jobLabel: llm-d-llm-d-modelservice-epp
  namespaceSelector:
    matchNames:
    - llm-d
  selector:
    matchLabels:
      llmd.ai/gather-metrics: "true"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: modelservice
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-modelservice-monitor
  namespace: llm-d
spec:
  endpoints:
  - interval: 15s
    path: /metrics
    port: vllm
  jobLabel: llm-d-modelservice
  namespaceSelector:
    matchNames:
    - llm-d
  selector:
    matchLabels:
      llmd.ai/gather-metrics: "true"
---
apiVersion: networking.istio.io/v1
kind: DestinationRule
metadata:
  name: meta-llama-llama-3-2-3b-instruct-insecure-tls
  namespace: llm-d
spec:
  host: meta-llama-llama-3-2-3b-instruct-epp-service
  trafficPolicy:
    tls:
      insecureSkipVerify: true
      mode: SIMPLE
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/component: sample-application
    app.kubernetes.io/gateway: llm-d-inference-gateway
    app.kubernetes.io/instance: llm-d
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: llm-d
    app.kubernetes.io/version: "0.1"
    helm.sh/chart: llm-d-1.0.22
  name: llm-d-inference-gateway
  namespace: llm-d
spec:
  rules:
  - host: llm-d-inference-gateway.localhost
    http:
      paths:
      - backend:
          service:
            name: llm-d-inference-gateway
            port:
              number: 80
        path: /
        pathType: Prefix
